#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

# Colors for husky output
GREEN='\033[0;32m'
RED='\033[0;31m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "${BLUE}üöÄ Running pre-commit checks...${NC}"

# Get list of staged fiels
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACMR | grep -E '\.(js|jsx|ts|tsx|json|css|scss|md|yaml|yml)$' | sed 's| |\\ |g')

# Skip if no staged files
# Skip if no staged files
if [ -z "$STAGED_FILES" ]; then
    echo "${YELLOW}üì≠ No relevant files staged for commit. Skipping checks.${NC}"
    exit 0
fi

# Display staged files
echo "\n${BLUE}üìù Staged files:${NC}"
echo "$STAGED_FILES"
echo "\n"

# Function to handle errors
handle_error() {
    echo "${RED}‚ùå $1 failed!${NC}"
    echo "${YELLOW}üí° $2${NC}"
    exit 1
}

# Run Prettier check on staged files
echo "${BLUE}‚ú® Running Prettier check...${NC}"
echo "$STAGED_FILES" | xargs pnpm exec prettier --check || {
    handle_error "Prettier check" "Run 'pnpm prettier --write' to fix formatting issues"
}
echo "${GREEN}‚úÖ Prettier check passed!${NC}\n"

# Run ESLint on staged files (JS/TS only)
echo "${BLUE}üîç Running ESLint...${NC}"
STAGED_JS_FILES=$(echo "$STAGED_FILES" | grep -E '\.(js|jsx|ts|tsx)$')
if [ ! -z "$STAGED_JS_FILES" ]; then
    echo "$STAGED_JS_FILES" | xargs pnpm exec eslint --flag unstable_config_lookup_from_file --max-warnings=0 || {
        handle_error "ESLint check" "Fix the issues highlighted above and try again"
    }
    echo "${GREEN}‚úÖ ESLint check passed!${NC}\n"
else
    echo "${YELLOW}‚ö†Ô∏è  No JavaScript/TypeScript files to lint${NC}\n"
fi

# Run TypeScript compiler
echo "${BLUE}üìò Running type check...${NC}"
pnpm exec tsc --noEmit || {
    handle_error "TypeScript check" "Fix type errors and try again"
}
echo "${GREEN}‚úÖ Type check passed!${NC}\n"

echo "${GREEN}üéâ All checks passed successfully!${NC}"