name: Create Release

on:
  push:
    branches: [main]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch Tags
        run: git fetch --tags

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          cache: "pnpm"

      - name: Get next version number
        id: vars
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          LAST_NUM=$(echo $LATEST_TAG | grep -o '[0-9]*$')
          NEXT_NUM=$((LAST_NUM + 1))
          echo "tag=$(echo $LATEST_TAG | sed "s/[0-9]*$/$NEXT_NUM/")" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Force add dist directory
        run: |
          git add --force dist/
          git status

      - name: Update package.json version
        run: |
          VERSION="${{ steps.vars.outputs.tag }}"
          VERSION_NO_V="${VERSION#v}"
          pnpm version $VERSION_NO_V --no-git-tag-version

      - name: Create and push tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          if [[ -n "$(git status --porcelain)" ]]; then
            git add package.json
            git commit -m "create release: ${{ steps.vars.outputs.tag }}"
            git tag ${{ steps.vars.outputs.tag }}
            git push origin ${{ steps.vars.outputs.tag }}
          else
            echo "No changes to commit"
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          name: Release ${{ steps.vars.outputs.tag }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
