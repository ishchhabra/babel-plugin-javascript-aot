{
  0 => BasicBlock {
    id: 0,
    instructions: [
      LiteralInstruction {
        id: 0,
        place: Place {
          id: 2,
          identifier: Identifier { id: 2, name: '$2', declarationId: 2 }
        },
        value: 5
      },
      StoreLocalInstruction {
        id: 1,
        place: Place {
          id: 3,
          identifier: Identifier { id: 3, name: '$3', declarationId: 0 }
        },
        lval: Place {
          id: 0,
          identifier: Identifier { id: 0, name: '$0', declarationId: 0 }
        },
        value: Place {
          id: 2,
          identifier: Identifier { id: 2, name: '$2', declarationId: 2 }
        },
        type: 'const'
      }
    ],
    terminal: JumpTerminal { id: 27, target: 1 }
  },
  1 => BasicBlock {
    id: 1,
    instructions: [
      LoadLocalInstruction {
        id: 2,
        place: Place {
          id: 4,
          identifier: Identifier { id: 4, name: '$4', declarationId: 3 }
        },
        target: Place {
          id: 0,
          identifier: Identifier { id: 0, name: '$0', declarationId: 0 }
        }
      },
      LiteralInstruction {
        id: 3,
        place: Place {
          id: 5,
          identifier: Identifier { id: 5, name: '$5', declarationId: 4 }
        },
        value: 0
      },
      BinaryExpressionInstruction {
        id: 4,
        place: Place {
          id: 6,
          identifier: Identifier { id: 6, name: '$6', declarationId: 5 }
        },
        operator: '>',
        left: Place {
          id: 4,
          identifier: Identifier { id: 4, name: '$4', declarationId: 3 }
        },
        right: Place {
          id: 5,
          identifier: Identifier { id: 5, name: '$5', declarationId: 4 }
        }
      }
    ],
    terminal: BranchTerminal {
      id: 25,
      test: Place {
        id: 6,
        identifier: Identifier { id: 6, name: '$6', declarationId: 5 }
      },
      consequent: 7,
      alternate: 8,
      fallthrough: 8
    }
  },
  2 => BasicBlock {
    id: 2,
    instructions: [],
    terminal: JumpTerminal { id: 24, target: 3 }
  },
  3 => BasicBlock {
    id: 3,
    instructions: [
      LiteralInstruction {
        id: 5,
        place: Place {
          id: 9,
          identifier: Identifier { id: 9, name: '$9', declarationId: 8 }
        },
        value: 3
      },
      StoreLocalInstruction {
        id: 6,
        place: Place {
          id: 10,
          identifier: Identifier { id: 10, name: '$10', declarationId: 6 }
        },
        lval: Place {
          id: 7,
          identifier: Identifier { id: 7, name: '$7', declarationId: 6 }
        },
        value: Place {
          id: 9,
          identifier: Identifier { id: 9, name: '$9', declarationId: 8 }
        },
        type: 'const'
      }
    ],
    terminal: JumpTerminal { id: 17, target: 4 }
  },
  4 => BasicBlock {
    id: 4,
    instructions: [
      LoadLocalInstruction {
        id: 7,
        place: Place {
          id: 11,
          identifier: Identifier { id: 11, name: '$11', declarationId: 9 }
        },
        target: Place {
          id: 7,
          identifier: Identifier { id: 7, name: '$7', declarationId: 6 }
        }
      },
      LiteralInstruction {
        id: 8,
        place: Place {
          id: 12,
          identifier: Identifier { id: 12, name: '$12', declarationId: 10 }
        },
        value: 0
      },
      BinaryExpressionInstruction {
        id: 9,
        place: Place {
          id: 13,
          identifier: Identifier { id: 13, name: '$13', declarationId: 11 }
        },
        operator: '>',
        left: Place {
          id: 11,
          identifier: Identifier { id: 11, name: '$11', declarationId: 9 }
        },
        right: Place {
          id: 12,
          identifier: Identifier { id: 12, name: '$12', declarationId: 10 }
        }
      }
    ],
    terminal: BranchTerminal {
      id: 15,
      test: Place {
        id: 13,
        identifier: Identifier { id: 13, name: '$13', declarationId: 11 }
      },
      consequent: 6,
      alternate: 7,
      fallthrough: 7
    }
  },
  5 => BasicBlock {
    id: 5,
    instructions: [],
    terminal: JumpTerminal { id: 14, target: 6 }
  },
  6 => BasicBlock {
    id: 6,
    instructions: [
      LoadLocalInstruction {
        id: 10,
        place: Place {
          id: 16,
          identifier: Identifier { id: 16, name: '$16', declarationId: 13 }
        },
        target: Place {
          id: 7,
          identifier: Identifier { id: 7, name: '$7', declarationId: 6 }
        }
      },
      LiteralInstruction {
        id: 11,
        place: Place {
          id: 17,
          identifier: Identifier { id: 17, name: '$17', declarationId: 14 }
        },
        value: 1
      },
      BinaryExpressionInstruction {
        id: 12,
        place: Place {
          id: 18,
          identifier: Identifier { id: 18, name: '$18', declarationId: 15 }
        },
        operator: '-',
        left: Place {
          id: 16,
          identifier: Identifier { id: 16, name: '$16', declarationId: 13 }
        },
        right: Place {
          id: 17,
          identifier: Identifier { id: 17, name: '$17', declarationId: 14 }
        }
      },
      StoreLocalInstruction {
        id: 13,
        place: Place {
          id: 19,
          identifier: Identifier { id: 19, name: '$19', declarationId: 6 }
        },
        lval: Place {
          id: 15,
          identifier: Identifier { id: 15, name: '$15', declarationId: 6 }
        },
        value: Place {
          id: 18,
          identifier: Identifier { id: 18, name: '$18', declarationId: 15 }
        },
        type: 'const'
      }
    ],
    terminal: JumpTerminal { id: 16, target: 4 }
  },
  7 => BasicBlock {
    id: 7,
    instructions: [
      LoadLocalInstruction {
        id: 18,
        place: Place {
          id: 22,
          identifier: Identifier { id: 22, name: '$22', declarationId: 17 }
        },
        target: Place {
          id: 0,
          identifier: Identifier { id: 0, name: '$0', declarationId: 0 }
        }
      },
      LiteralInstruction {
        id: 19,
        place: Place {
          id: 23,
          identifier: Identifier { id: 23, name: '$23', declarationId: 18 }
        },
        value: 1
      },
      BinaryExpressionInstruction {
        id: 20,
        place: Place {
          id: 24,
          identifier: Identifier { id: 24, name: '$24', declarationId: 19 }
        },
        operator: '-',
        left: Place {
          id: 22,
          identifier: Identifier { id: 22, name: '$22', declarationId: 17 }
        },
        right: Place {
          id: 23,
          identifier: Identifier { id: 23, name: '$23', declarationId: 18 }
        }
      },
      StoreLocalInstruction {
        id: 21,
        place: Place {
          id: 25,
          identifier: Identifier { id: 25, name: '$25', declarationId: 0 }
        },
        lval: Place {
          id: 21,
          identifier: Identifier { id: 21, name: '$21', declarationId: 0 }
        },
        value: Place {
          id: 24,
          identifier: Identifier { id: 24, name: '$24', declarationId: 19 }
        },
        type: 'const'
      },
      LoadLocalInstruction {
        id: 22,
        place: Place {
          id: 26,
          identifier: Identifier { id: 26, name: '$26', declarationId: 20 }
        },
        target: Place {
          id: 15,
          identifier: Identifier { id: 15, name: '$15', declarationId: 6 }
        }
      },
      StoreLocalInstruction {
        id: 23,
        place: Place {
          id: 27,
          identifier: Identifier { id: 27, name: '$27', declarationId: 7 }
        },
        lval: Place {
          id: 8,
          identifier: Identifier { id: 8, name: '$8', declarationId: 7 }
        },
        value: Place {
          id: 26,
          identifier: Identifier { id: 26, name: '$26', declarationId: 20 }
        },
        type: 'const'
      }
    ],
    terminal: JumpTerminal { id: 26, target: 1 }
  },
  8 => BasicBlock {
    id: 8,
    instructions: [
      LoadLocalInstruction {
        id: 28,
        place: Place {
          id: 28,
          identifier: Identifier { id: 28, name: '$28', declarationId: 21 }
        },
        target: Place {
          id: 21,
          identifier: Identifier { id: 21, name: '$21', declarationId: 0 }
        }
      },
      StoreLocalInstruction {
        id: 29,
        place: Place {
          id: 29,
          identifier: Identifier { id: 29, name: '$29', declarationId: 1 }
        },
        lval: Place {
          id: 1,
          identifier: Identifier { id: 1, name: '$1', declarationId: 1 }
        },
        value: Place {
          id: 28,
          identifier: Identifier { id: 28, name: '$28', declarationId: 21 }
        },
        type: 'const'
      }
    ],
    terminal: undefined
  }
}